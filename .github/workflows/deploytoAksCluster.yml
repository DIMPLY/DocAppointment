on: [push]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
   
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: my-ecr-repo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
""" 
    - uses: azure/k8s-set-context@v1
      id: login
      with:
         kubeconfig: ${{ secrets.aks_kubecluster_kubeConfig }}
    
    - name: Create namespace
      run: |
        namespacePresent=`kubectl get namespace | grep kubecluster30b1 | wc -l`
        if [ $namespacePresent -eq 0 ]
        then
            echo `kubectl create namespace kubecluster30b1`
        fi

    - uses: azure/k8s-create-secret@v1
      with:
        namespace: kubecluster30b1
        container-registry-url: docappbackendapi.azurecr.io
        container-registry-username: ${{ steps.create-acr.outputs.acr_username }}
        container-registry-password: ${{ steps.create-acr.outputs.acr_password }}
        secret-name: kubeclusterdockerauth
       
    - uses: azure/k8s-deploy@v1
      with:
        namespace: kubecluster30b1
        manifests: |
          #manifests/deployment.yml
          #manifests/service.yml
          #manifests/endpoint.yml
        images: |
          docappbackendapi.azurecr.io/kubecluster:${{ github.sha }}
        imagepullsecrets: |
          kubeclusterdockerauth
"""
